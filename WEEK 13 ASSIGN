# Install and load necessary libraries
library(tidyverse)
library(gridExtra)

# Load the dataset
data <- read_csv("J:/My Drive/COLLEGE LEARNINGS/SEMESTER 1/GRAD FIRST/R/MERGED2007_08_PP.csv")

# Handle missing values, "PrivacySuppressed," and NULL values
cleaned_data <- data %>% 
  mutate_all(~ifelse(. %in% c("PrivacySuppressed", "NULL"), NA, .))  # Convert "PrivacySuppressed" and "NULL" to NA

# Convert relevant columns to numeric
cleaned_data <- cleaned_data %>%
  mutate(MD_EARN_WNE_P10 = as.numeric(ifelse(MD_EARN_WNE_P10 %in% c("PrivacySuppressed"), NA, MD_EARN_WNE_P10)),
         ADM_RATE = as.numeric(ifelse(ADM_RATE %in% c("NULL"), NA, ADM_RATE)),
         SAT_AVG = as.numeric(ifelse(SAT_AVG %in% c("NULL"), NA, SAT_AVG)))

# Filter for institutions with IC Level FOUR YEAR and non-missing SAT_AVG, MD_EARN_WNE_P10, and ADM_RATE
filtered_data <- cleaned_data %>% 
  filter(ICLEVEL %in% c(1, 2, 3), !is.na(SAT_AVG), !is.na(MD_EARN_WNE_P10), !is.na(ADM_RATE))

# Select relevant variables for analysis
selected_data <- filtered_data %>% 
  select(MD_EARN_WNE_P10, SAT_AVG, ADM_RATE, ICLEVEL)

# Define custom colors for ICLEVEL
custom_colors <- c("1" = "red", "2" = "green", "3" = "blue")

# Scatterplot for SAT_AVG vs. MD_EARN_WNE_P10 with ICLEVEL as color
plot_sat_avg <- ggplot(selected_data, aes(x = SAT_AVG, y = MD_EARN_WNE_P10, color = factor(ICLEVEL))) +
  geom_point() +
  labs(title = "SAT Average vs. Median Earnings by IC Level",
       x = "SAT Average",
       y = "Median Earnings 10 Years After Entry",
       color = "IC Level") +
  scale_color_manual(values = custom_colors)

# Scatterplot for ADM_RATE vs. MD_EARN_WNE_P10 with ICLEVEL as color
plot_adm_rate <- ggplot(selected_data, aes(x = ADM_RATE, y = MD_EARN_WNE_P10, color = factor(ICLEVEL))) +
  geom_point() +
  labs(title = "Admission Rate vs. Median Earnings by IC Level",
       x = "Admission Rate",
       y = "Median Earnings 10 Years After Entry",
       color = "IC Level") +
  scale_color_manual(values = custom_colors)

# Display both plots side by side
grid.arrange(plot_sat_avg, plot_adm_rate, ncol = 2)
